import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Trans, useTranslation } from 'react-i18next';
import { Text } from '@actual-app/components/text';
import { theme } from '@actual-app/components/theme';
import { View } from '@actual-app/components/view';
import { Link } from '@desktop-client/components/common/Link';
import { Modal, ModalCloseButton, ModalHeader, } from '@desktop-client/components/common/Modal';
import { TableHeader, Row, Field } from '@desktop-client/components/table';
export function GoalTemplateModal() {
    const { t } = useTranslation();
    return (_jsx(Modal, { name: "goal-templates", containerProps: { style: { width: 850 } }, children: ({ state: { close } }) => (_jsxs(_Fragment, { children: [_jsx(ModalHeader, { title: t('Goal Templates'), rightContent: _jsx(ModalCloseButton, { onPress: close }) }), _jsxs(View, { children: [_jsxs(TableHeader, { children: [_jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Weekly Templates" }) }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Description" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#template $10 repeat every week starting 2025-01-03" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "$10 a week" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#template $10 repeat every week starting 2025-01-03 up to $80" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "$10 a week, up to a maximum of $80" }) })] }), _jsx("span", { children: _jsx("br", {}) }), _jsxs(TableHeader, { children: [_jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Monthly Templates" }) }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Description" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#template $50" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "$50 each month" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#template up to $150" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Up to $150 each month, and remove extra funds over $150" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#template up to $150 hold" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Up to $150 each month, but retain any funds over $150" }) })] }), _jsx("span", { children: _jsx("br", {}) }), _jsxs(TableHeader, { children: [_jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Multi-month Templates" }) }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Description" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#template $500 by 2025-03 repeat every 6 months" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Break down less-frequent expenses into monthly expenses" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#template $500 by 2025-03 repeat every year" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Break down less-frequent expenses into monthly expenses" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#template $500 by 2025-03 repeat every 2 years" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Break down less-frequent expenses into monthly expenses" }) })] }), _jsx("span", { children: _jsx("br", {}) }), _jsxs(TableHeader, { children: [_jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Schedule Templates" }) }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Description" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#template schedule SCHEDULE_NAME" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Fund upcoming scheduled transactions over time" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#template schedule full SCHEDULE_NAME" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Fund upcoming scheduled transaction only on needed month" }) })] }), _jsx("span", { children: _jsx("br", {}) }), _jsxs(TableHeader, { children: [_jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Goal Templates" }) }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Description" }) })] }), _jsxs(Row, { style: { backgroundColor: theme.tableBackground }, children: [_jsx(Field, { width: "flex", children: "#goal 1000" }), _jsx(Field, { width: "flex", children: _jsx(Trans, { children: "Set a long-term goal instead of a monthly goal" }) })] }), _jsxs("div", { style: {
                                textAlign: 'right',
                                fontSize: '1em',
                                color: theme.pageTextLight,
                                marginTop: 3,
                            }, children: [_jsx("span", { children: _jsx("br", {}) }), _jsx(Text, { children: _jsxs(Trans, { children: ["See", ' ', _jsx(Link, { variant: "external", linkColor: "muted", to: "https://actualbudget.org/docs/experimental/goal-templates", children: "Goal Templates" }), ' ', "for more information."] }) })] })] })] })) }));
}
